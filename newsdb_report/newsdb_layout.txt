vagrant@vagrant:/vagrant$ psql -d news
psql (9.5.10)
Type "help" for help.

news=> \dt
          List of relations
 Schema |   Name   | Type  |  Owner
--------+----------+-------+---------
 public | articles | table | vagrant
 public | authors  | table | vagrant
 public | log      | table | vagrant
(3 rows)

news=> \d articles
                                  Table "public.articles"
 Column |           Type           |                       Modifiers                        |                  Description
--------+--------------------------+--------------------------------------------------------+-----------------------------------------------------
 author | integer                  | not null                                               | author.id from authors table
 title  | text                     | not null                                               | Article title
 slug   | text                     | not null                                               | Article filename (log.path = /article/articles.slug)
 lead   | text                     |                                                        | Article lead
 body   | text                     |                                                        | Article body
 time   | timestamp with time zone | default now()                                          | timestamp of article addition
 id     | integer                  | not null default nextval('articles_id_seq'::regclass)  | primary, autoincrementing ID field
Indexes:
    "articles_pkey" PRIMARY KEY, btree (id)
    "articles_slug_key" UNIQUE CONSTRAINT, btree (slug)
Foreign-key constraints:
    "articles_author_fkey" FOREIGN KEY (author) REFERENCES authors(id)

news=> \d authors
                         Table "public.authors"
 Column |  Type   |                      Modifiers                        |                  Description
--------+---------+-------------------------------------------------------+-----------------------------------------------------
 name   | text    | not null                                              | Author name
 bio    | text    |                                                       | Author short biography
 id     | integer | not null default nextval('authors_id_seq'::regclass)  | primary, autoincrementing ID field
Indexes:
    "authors_pkey" PRIMARY KEY, btree (id)
Referenced by:
    TABLE "articles" CONSTRAINT "articles_author_fkey" FOREIGN KEY (author) REFERENCES authors(id)

news=> \d log
                                  Table "public.log"
 Column |           Type           |                    Modifiers                       |                  Description
--------+--------------------------+----------------------------------------------------+-----------------------------------------------------
 path   | text                     |                                                    | filename of get request
 ip     | inet                     |                                                    | IP address of get request
 method | text                     |                                                    | "GET" for all entries
 status | text                     |                                                    | "200 OK" for all non-error requests
 time   | timestamp with time zone | default now()                                      | timestamp of log entry
 id     | integer                  | not null default nextval('log_id_seq'::regclass)   | primary, autoincrementing ID field
Indexes:
    "log_pkey" PRIMARY KEY, btree (id)




    '''1. What are the most popular three articles of all time?'''

    CREATE VIEW article_hits as
    SELECT articles.title as article_title, count(*) as hits
    FROM log, articles
    WHERE log.path = ('/article/' || articles.slug)
    GROUP BY articles.title
    ORDER BY hits desc;

    news=> select * from article_hits limit 10;
               article_title            |  hits
    ------------------------------------+--------
     Candidate is jerk, alleges rival   | 338647
     Bears love berries, alleges bear   | 253801
     Bad things gone, say good people   | 170098
     Goats eat Google's lawn            |  84906
     Trouble for troubled troublemakers |  84810
     Balloon goons doomed               |  84557
     There are a lot of bears           |  84504
     Media obsessed with bears          |  84383
    (8 rows)


    '''2. Who are the most popular article authors of all time?'''
    SELECT authors.name, SUM( article_hits.hits )
    FROM authors, articles, article_hits
    WHERE article_hits.article_title = articles.title AND authors.id = articles.author
    GROUP BY authors.name
    ORDER BY sum desc;

              name          |  sum
    ------------------------+--------
     Ursula La Multa        | 507594
     Rudolf von Treppenwitz | 423457
     Anonymous Contributor  | 170098
     Markoff Chaney         |  84557
    (4 rows)


    '''3. On which days did more than 1% of requests lead to errors?'''

    Example
    July 29, 2016 â€” 2.5% errors

    CREATE VIEW errors AS
    SELECT ok_count.date AS date, ok_count.count AS oks, error_count.count AS errors, ROUND(100*(ok_count.count/(ok_count.count+error_count.count)::float)::numeric,1) AS percent_good
    FROM
    (SELECT date_trunc('day', time) AS date, count(status) FROM log WHERE status = '200 OK' GROUP BY date) AS ok_count
    LEFT JOIN
    (SELECT date_trunc('day', time) AS date, count(status) FROM log WHERE status SIMILAR TO '(4|5)%' GROUP BY date) AS error_count
    ON ok_count.date = error_count.date;

    news=> select * from errors where percent_good < '99' order by date;
              date          |  oks  | errors | percent_good
    ------------------------+-------+--------+--------------
     2016-07-17 00:00:00+00 | 54642 |   1265 |         97.7
    (1 row)
    '''
